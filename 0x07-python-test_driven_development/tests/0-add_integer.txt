0-add_integer
=============

This file contains examples for the add_integer function


Basic Usage
-----------

The `add_integer` function adds two integers/floats together and
the second integer has a default number of 98 if it is not provided.
It returns the result as an integer

>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(1, 2)
3

>>> add_integer(100, -2)
98

>>> add_integer(2)
100

>>> add_integer(100.3, -2)
98

>>> add_integer(-5, 7)
2


Exception Handling
------------------

When input is of user is not what it should be, the function raises

TypeError
---------
If either or both inputs are not numbers (integers or floats).

>>> add_integer(4, "School")
Traceback (most recent call last):
    ...
TypeError: b must be an integer

>>> add_integer("hello", 5)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

>>> add_integer(None)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

>>> add_integer("hello", "world")
Traceback (most recent call last):
    ...
TypeError: a must be an integer

OverflowError
-------------
If the result of adding two integers
exceeds the maximum value that can be stored in an int variable.

>>> add_integer(float(1e1024))
Traceback (most recent call last):
    ...
OverflowError: cannot convert float infinity to integer

ValueError
----------
If one or both of the inputs cannot be converted

>>> add_integer(float('Nan'))
Traceback (most recent call last):
    ...
ValueError: cannot convert float NaN to integer
